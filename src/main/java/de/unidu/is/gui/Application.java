/*
Copyright 2000-2005 University Duisburg-Essen, Working group "Information Systems"

Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at

  http://www.apache.org/licenses/LICENSE-2.0 

Unless required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License. 
*/

 
// $Id: Application.java,v 1.7 2005/03/04 11:22:52 nottelma Exp $

package de.unidu.is.gui;
/* Generated by Together */
import java.awt.*;
import javax.swing.*;
/**
 * The default demo application to test the WOB FIOLA <i>Desktop</i> framework. <p> Run me. <br> <i>Test Me!</i>
 * @author Andr&#xFFFD; Schaefer
 * @see Desktop
 * @stereotype implementationClass
 * @version $Revision: 1.7 $
 */
final public class Application extends JFrame {
	private Desktop ivjDesktop1= null;
	private static java.util.ResourceBundle resdesktop=
		java.util.ResourceBundle.getBundle("desktop");
	/** DefaultApp constructor comment. */
	public Application() {
		super();
		initialize();
	}
	/**
	 * DefaultApp constructor comment.
	 * @param title java.lang.String
	 */
	public Application(String title) {
		super(title);
		initialize();
	}
	/**
	 * Return the Desktop1 property value.
	 * @return <{Desktop}>
	 */
	public Desktop getDesktop() {
		if (ivjDesktop1 == null) {
			try {
				ivjDesktop1= new Desktop();
				ivjDesktop1.setName("Desktop1");
				// user code begin {1}
				this.addWindowListener((Desktop) ivjDesktop1);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjDesktop1;
	}
	/**
	 * Called whenever the part throws an exception.
	 * @param exception java.lang.Throwable
	 */
	private void handleException(java.lang.Throwable exception) {
		/* Uncomment the following lines to print uncaught exceptions to stdout */
		// de.unidu.is.util.Log.error(exception);
	}
	/** Initialize the class. */
	private void initialize() {
		try {
			// user code begin {1}
			// user code end
			setName("DefaultApp");
			setDefaultCloseOperation(
				javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
			setSize(1024, 768);
			setTitle("Application");
			setContentPane(getDesktop());
		} catch (java.lang.Throwable ivjExc) {
			handleException(ivjExc);
		}
	}
	/**
	 * Starts the application.
	 * @param args an array of command-line arguments
	 */
	public static void main(java.lang.String[] args) {
		try {
			/* Set native look and feel */
			//UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
			
			String home= System.getProperty("user.home", ".");
			java.net.URL url= null;
			java.io.File f= new java.io.File(home, "daffodil.lcf");
			if (f.isFile()) {
				url= f.toURL();
				System.out.println(
					"You can manage debug output by writing a log4j config file, named \'daffodil.lcf\' to "
						+ home);
			} else {
				url= Application.class.getResource("/daffodil.lcf");
			}
			org.apache.log4j.PropertyConfigurator.configure(url);
			/* Create the frame */
			Application aDefaultApp= new Application("AppTitle");
			/* Calculate the screen size */
			Dimension screenSize= Toolkit.getDefaultToolkit().getScreenSize();
			/* Pack frame on the screen */
			aDefaultApp.pack();
			/* Center frame on the screen */
			Dimension frameSize= aDefaultApp.getSize();
			if (frameSize.height > screenSize.height) {
				frameSize.height= screenSize.height;
			}
			if (frameSize.width > screenSize.width) {
				frameSize.width= screenSize.width;
			}
			aDefaultApp.setLocation(
				(screenSize.width - frameSize.width) / 2,
				(screenSize.height - frameSize.height) / 2);
			/* Add a windowListener for the windowClosedEvent */
			aDefaultApp.addWindowListener(new java.awt.event.WindowAdapter() {
				public void windowClosed(java.awt.event.WindowEvent e) {
					System.exit(0);
				};
			});
			aDefaultApp.setVisible(true);
		} catch (Throwable exception) {
			System.err.println("exception in main");
			de.unidu.is.util.Log.error(exception);
		}
	}
	/**
	 * @return
	 */
	public Desktop getDesktopInstance() {
		return getDesktop();
	}
}
